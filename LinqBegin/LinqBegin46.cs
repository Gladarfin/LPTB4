using PT4;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml.Schema;

namespace PT4Tasks
{
    public class MyTask : PT
    {
        // При решении задач группы LinqBegin доступны следующие
        // дополнительные методы, определенные в задачнике:
        //
        //   GetEnumerableInt() - ввод числовой последовательности;
        //
        //   GetEnumerableString() - ввод строковой последовательности;
        //
        //   Put() (метод расширения) - вывод последовательности;
        //
        //   Show() и Show(cmt) (методы расширения) - отладочная печать
        //     последовательности, cmt - строковый комментарий;
        //
        //   Show(e => r) и Show(cmt, e => r) (методы расширения) -
        //     отладочная печать значений r, полученных из элементов e
        //     последовательности, cmt - строковый комментарий.

        public static void Solve()
        {
            //LinqBegin46°. Даны последовательности положительных целых чисел A и B; все числа в каждой последовательности различны. 
            //Найти последовательность всех пар чисел, удовлетворяющих следующим условиям: первый элемент пары принадлежит последовательности A, 
            //второй принадлежит B, и оба элемента оканчиваются одной и той же цифрой. Результирующая последовательность называется внутренним объединением 
            //последовательностей A и B по ключу, определяемому последними цифрами исходных чисел.Представить найденное объединение в виде 
            //последовательности строк, содержащих первый и второй элементы пары, разделенные дефисом, например, «49 - 129». 
            //Порядок следования пар должен определяться исходным порядком элементов последовательности A, а для равных первых элементов — порядком элементов последовательности B. 

            Task("LinqBegin46");
            var a = GetEnumerableInt();
            var b = GetEnumerableInt();
            a.Join(b, 
                   x => x % 10, 
                   y => y % 10, 
                   (x, y) => string.Format("{0}-{1}", x, y))
                   .Put();            
        }
    }

}
