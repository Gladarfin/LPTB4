using PT4;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace PT4Tasks
{
    public class MyTask: PT
    {
        // Для чтения набора строк из исходного текстового файла
        // в массив a типа string[] используйте оператор:
        //
        //   a = File.ReadAllLines(GetString(), Encoding.Default);
        //
        // Для записи последовательности s типа IEnumerable<string>
        // в результирующий текстовый файл используйте оператор:
        //
        //   File.WriteAllLines(GetString(), s.ToArray(), Encoding.Default);
        //
        // При решении задач группы LinqObj доступны следующие
        // дополнительные методы расширения, определенные в задачнике:
        //
        //   Show() и Show(cmt) - отладочная печать последовательности,
        //     cmt - строковый комментарий;
        //
        //   Show(e => r) и Show(cmt, e => r) - отладочная печать
        //     значений r, полученных из элементов e последовательности,
        //     cmt - строковый комментарий.

        public static void Solve()
        {
            //LinqObj9°. Дано целое число K — код одного из клиентов фитнес - центра.
            //Исходная последовательность содержит сведения о клиентах этого фитнес - центра.
            //Каждый элемент последовательности включает следующие целочисленные поля:
            //< Код клиента > < Продолжительность занятий(в часах) > < Номер месяца > < Год >
            //Для каждого года, в котором клиент с кодом K посещал центр, определить число месяцев, 
            //для которых продолжительность занятий данного клиента превосходила 15 часов(вначале выводить число месяцев, затем год).
            //Если для некоторого года требуемые месяцы отсутствуют, то вывести для него 0.
            //Сведения о каждом годе выводить на новой строке; данные упорядочивать по убыванию числа месяцев, 
            //а при равном числе месяцев — по возрастанию номера года. Если данные об указанном клиенте отсутствуют, 
            //то записать в результирующий файл строку «Нет данных».
            Task("LinqObj9");
            int k = GetInt();
            var d = File.ReadAllLines(GetString(), Encoding.Default)
                        .Where(code => int.Parse(code.Split(' ')[0]) == k)
                        .Select(data => new[] { data.Split(' ')[1],
                                                data.Split(' ')[2],
                                                data.Split(' ')[3]})
                        .GroupBy(x => x[2],
                                 y => y,
                                 (x, y) => y.Where(j => int.Parse(j[0]) > 15).Count().ToString() + ' ' + x.ToString())
                        .OrderByDescending(x => x.Split(' ')[0])
                        .ThenBy(x => x.Split(' ')[1])
                        .DefaultIfEmpty("Нет данных");
			File.WriteAllLines(GetString(), d, Encoding.Default);
        }
    }
}
